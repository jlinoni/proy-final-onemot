import json
import boto3

def lambda_handler(event, context):

    # Create SQS client
    sqs = boto3.client('sqs')
    queue_url = 'https://sqs.us-east-1.amazonaws.com/556384637097/sqs_solicitudes'
    
    # Receive message from SQS queue
    response = sqs.receive_message(
        QueueUrl=queue_url,
        MaxNumberOfMessages=3,
        WaitTimeSeconds=10
    )
    
    print(response)
    
    messages = response.get('Messages', [])
    licencias = []
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('ddb_Licencia')

    for message in messages:
        licencia = json.loads(message['Body'])
        print(licencia)
        
        # Revisar si la licencia existe
        response_dynamodb = table.get_item(
            Key={
                'tenant_id': licencia['tenant_id'],
                'licencia_id': licencia['licencia_id']
            }
        )
        
        if 'Item' in response_dynamodb:
            
            # Si existe, actualizar el estado a "Activado"
            table.update_item(
                Key={
                    'tenant_id': licencia['tenant_id'],
                    'licencia_id': licencia['licencia_id']
                    
                },
                UpdateExpression='SET licencia_datos.estado = :estado',
                ExpressionAttributeValues={':estado': 'Activado'}
                )
        else:
            # Si la licencia no existe, enviarla a una cola de errores (opcional)
            # Por ahora, simplemente imprimir un mensaje
            print(f"Licencia con tenant_id {licencia['tenant_id']} y licencia_id {licencia['licencia_id']} no encontrada.")
            print(f"Licencia con tenant_id {licencia['tenant_id']} y licencia_id {licencia['licencia_id']} no encontrada.")
            sqs.send_message(
                QueueUrl='https://sqs.us-east-1.amazonaws.com/556384637097/dlq_solicitudes_fallidas',
                MessageBody=json.dumps(licencia)
                )
            
        licencias.append(licencia)
        receipt_handle = message['ReceiptHandle']
        
        # Delete received message from queue
        sqs.delete_message(
            QueueUrl=queue_url,
            ReceiptHandle=receipt_handle
        )

    return {
        'statusCode': 200,
        'pedidos_procesados': licencias
    }